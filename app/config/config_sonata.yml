sonata_admin:
    title:      Euradio Administration
#    title_logo: /bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig
#
#        # default actions templates, should extend a global templates
#        list:    SonataAdminBundle:CRUD:list.html.twig
#        show:    SonataAdminBundle:CRUD:show.html.twig
#        edit:    SonataAdminBundle:CRUD:edit.html.twig
#    dashboard:
#        blocks:
            # display a dashboard block
#            - { position: left, type: sonata.admin.block.admin_list }

#        groups:
#            default: ~
    security:
        handler: sonata.admin.security.handler.acl
        # acl security information
        information:
            GUEST:    [VIEW, LIST]
            STAFF:    [EDIT, LIST, CREATE]
            EDITOR:   [OPERATOR]
            ADMIN:    [MASTER]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]

sonata_page:
    multisite: host
    ignore_route_patterns:
        - ^(.*)admin(.*)
        - ^_(.*)        
    ignore_routes:
        - sonata_page_esi_cache
        - sonata_page_js_sync_cache
        - sonata_page_js_async_cache
        - sonata_page_apc_cache
    ignore_uri_patterns:
        - ^/admin(.*)   # ignore admin route, ie route containing 'admin'
    page_defaults:
        homepage: {decorate: false} # disable decoration for homepage, key - is a page route
    default_template: default # template key from templates section, used as default for pages
    templates:
        default: {path: 'SonataPageBundle::layout.html.twig', name: default }
        ecoute: {path: 'SonataPageBundle::ecoute2.html.twig', name: ecoute }
    # manage the http errors
    catch_exceptions:
        not_found: [404] 
        fatal:     [500]

sonata_cache:
#    caches:
#        esi:
#            servers:
#                - varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"
#        mongo:
#            database:   cache
#            collection: cache
#            servers:
#                - {host: 127.0.0.1, port: 27017, user: username, password: pASS'}
#                - {host: 127.0.0.2}
#        memcached:
#            prefix: test     # prefix to ensure there is no clash between instances
#            servers:
#                - {host: 127.0.0.1, port: 11211, weight: 0}
#        memcache:
#            prefix: test     # prefix to ensure there is no clash between instances
#            servers:
#                - {host: 127.0.0.1, port: 11211, weight: 1}
#        apc:
#            token:  s3cur3   # token used to clear the related cache
#            prefix: test     # prefix to ensure there is no clash between instances
#            servers:
#                - { domain: kooqit.local, ip: 127.0.0.1, port: 80}

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
#     sonata.admin_doctrine_orm.block.audit:
#            contexts:   [admin]
        sonata.block.service.text:
        sonata.block.service.wysiwyg:
        sonata.block.service.action:
        sonata.block.service.rss:
        sonata.media.block.media:
        sonata.media.block.gallery:
        sonata.media.block.feature_media:

        
sonata_notification:
    backend: sonata.notification.backend.runtime
    
sonata_seo:
    default:          sonata.seo.page.default
    title:            Sonata Project
    metas:
        name:
            keywords:             foo bar
            description:          The description
            robots:               index, follow
        property:
            'og:site_name':       Sonata Project Sandbox
            'og:description':     A demo of the some rich bundles for your Symfony2 projects
        http-equiv:
            'Content-Type':         text/html; charset=utf-8
    head:
        'xmlns':              http://www.w3.org/1999/xhtml
        'xmlns:og':           http://opengraphprotocol.org/schema/

sonata_media:
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb
    contexts:
        default:  
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.podcast
            formats:
                big: { width: 620 ,  quality: 70}
                medium: { width: 300 , height: 150 , quality: 70}
                small: { width: 100 , quality: 70}
                logo: { width: 189 , quality: 70}
                pub: { width: 728 , height: 90 , quality: 70}
    cdn:
        server:
            path: /uploads/media
    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false           
    providers:
        image:
            resizer: sonata.media.resizer.simple #sonata.media.resizer.square
            allowed_mime_types:
              - image/gif
              - image/jpeg
              - image/png
              - image/pjpeg
            allowed_extensions:
              - gif
              - png
              - jpeg
              - jpg
sonata_news:
  title:        "Les blogs d'Euradio"
  link:         http://sonata-project.org
  description:  Cool bundles on top of Symfony2
  salt:         'yoiuplaboumsitck'
  permalink_generator: sonata.news.permalink.date
  comment:
    notification:
      emails:   [webmaster@euradionantes.eu]
      from:     no-reply@euradionantes.eu
      template: 'SonataNewsBundle:Mail:comment_notification.txt.twig'
      
  class:
    post:       Application\Sonata\NewsBundle\Entity\Post
    tag:        Application\Sonata\NewsBundle\Entity\Tag
    comment:    Application\Sonata\NewsBundle\Entity\Comment
    category:   Application\Sonata\NewsBundle\Entity\Category
    media:      Application\Sonata\MediaBundle\Entity\Media
    user:       Application\Sonata\UserBundle\Entity\User
     
sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

sonata_doctrine_orm_admin:
    templates:
        types:
            list:
                array:      SonataAdminBundle:CRUD:list_array.html.twig
                boolean:    SonataAdminBundle:CRUD:list_boolean.html.twig
                date:       SonataAdminBundle:CRUD:list_date.html.twig
                time:       SonataAdminBundle:CRUD:list_time.html.twig
                datetime:   SonataAdminBundle:CRUD:list_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_list_field.html.twig
                trans:      SonataAdminBundle:CRUD:list_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_list_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_list_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_list_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_list_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_list_field.html.twig
                identifier: SonataAdminBundle:CRUD:base_list_field.html.twig

            show:
                array:      SonataAdminBundle:CRUD:show_array.html.twig
                boolean:    SonataAdminBundle:CRUD:show_boolean.html.twig
                date:       SonataAdminBundle:CRUD:show_date.html.twig
                time:       SonataAdminBundle:CRUD:show_time.html.twig
                datetime:   SonataAdminBundle:CRUD:show_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_show_field.html.twig
                trans:      SonataAdminBundle:CRUD:show_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_show_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_show_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_show_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_show_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_show_field.html.twig

sonata_user:
    security_acl:           false
    impersonating_route:    sonata_user_impersonating
    class:
        user:               Application\Sonata\UserBundle\Entity\User
        group:              Application\Sonata\UserBundle\Entity\Group

    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               sonata.user.profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]    
#ApplicationSonataPageBundle: ~
#SonataPageBundle: ~

services:
    sonata.news.admin.post:
        class: Application\Sonata\NewsBundle\Admin\PostAdmin
        tags:
            - { name: sonata.admin,manager_type: orm, group: "sonata_blog", label: "posts",  label_catalogue: "%sonata.news.admin.post.translation_domain%", label_translator_strategy: "sonata.admin.label.strategy.underscore"}
        arguments: [null,Application\Sonata\NewsBundle\Entity\Post, "SonataAdminBundle:CRUD"]  
